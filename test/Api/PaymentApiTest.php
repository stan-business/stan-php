<?php
/**
 * PaymentApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  Stan
 * @author Brightweb
 * @link https://stan-business.fr
 */

/**
 * Stan API
 *
 * Stan Client API
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Stan\Test\Api;

use Stan\Api\PaymentApi;
use Stan\Model\Payment;
use Stan\Model\PreparedPayment;
use Stan\Model\PaymentRequestBody;

use Stan\Configuration;
use Stan\ApiException;
use Stan\ObjectSerializer;
use Stan\Api\StanClient;
use Stan\Test\Api\TestCase;

/**
 * PaymentApiTest Class Doc Comment
 *
 * @category Class
 * @package  Stan
 * @author Brightweb
 * @link https://stan-business.fr
 */
class PaymentApiTest extends TestCase
{

    /**
     * Test case for createPaymentInvoice
     *
     * Create a payment.
     *
     */
    public function testCreate()
    {
        $this->client
            ->method('sendRequest')
            ->willReturn('{"payment_id": "abc", "redirect_url": "https://stan-app.fr"}');

        $paymentApi = new PaymentApi($this->client);
        $payment = $paymentApi->create(new PaymentRequestBody());
        $this->assertInstanceOf(PreparedPayment::class, $payment);
        $this->assertSame("abc", $payment->getPaymentId());
        $this->assertSame("https://stan-app.fr", $payment->getRedirectUrl());
    }

    /**
     * Test case for getPayment
     *
     * Get a payment.
     *
     */
    public function testGetPayment()
    {
        $this->client
            ->method('sendRequest')
            ->willReturn('{"id": "payment_id"}');

        $paymentApi = new PaymentApi($this->client);
        $payment = $paymentApi->getPayment("");
        $this->assertInstanceOf(Payment::class, $payment);
        $this->assertSame("payment_id", $payment->getId());
    }

    /**
     * Test case for getPayments
     *
     * Get all payments.
     *
     */
    public function testGetPayments()
    {
        $this->client
            ->method('sendRequest')
            ->willReturn('[{"id": "payment_id"}]');

        $paymentApi = new PaymentApi($this->client);
        $payments = $paymentApi->getPayments();

        $this->assertFalse(empty($payments));
        $this->assertSame("payment_id", $payments[0]->getId());
    }
}
