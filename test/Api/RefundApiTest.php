<?php
/**
 * RefundApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  Stan
 * @author Brightweb
 * @link https://stan-business.fr
 */

/**
 * Stan API
 *
 * Stan Client API
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Stan\Test\Api;

use Stan\Api\RefundApi;
use Stan\Model\Refund;
use Stan\Model\RefundRequestBody;

use Stan\Configuration;
use Stan\ApiException;
use Stan\ObjectSerializer;
use Stan\Api\StanClient;
use Stan\Test\Api\TestCase;

/**
 * RefundApiTest Class Doc Comment
 *
 * @category Class
 * @package  Stan
 * @author Brightweb
 * @link https://stan-business.fr
 */
class RefundApiTest extends TestCase
{

    /**
     * Test case for create
     *
     * Create a refund.
     *
     */
    public function testCreate()
    {
        $this->client
            ->method('sendRequest')
            ->willReturn('{"amount": 101}');

        $refundApi = new RefundApi($this->client);
        $refund = $refundApi->create(new RefundRequestBody());

        $this->assertInstanceOf(Refund::class, $refund);
        $this->assertSame(101, $refund->getAmount());
    }

    /**
     * Test case for getRefund
     *
     * Get a refund.
     *
     */
    public function testGetRefund()
    {
        $this->client
            ->method('sendRequest')
            ->willReturn('{"refund_id": "refund_id"}');

        $refundApi = new RefundApi($this->client);
        $refund = $refundApi->getRefund("refund_id");

        $this->assertInstanceOf(Refund::class, $refund);
        $this->assertSame("refund_id", $refund->getRefundId());
    }

    /**
     * Test case for getRefunds
     *
     * Get all refunds.
     *
     */
    public function testGetRefunds()
    {
        $this->client
            ->method('sendRequest')
            ->willReturn('[{"refund_id": "refund_id"}]');

        $refundApi = new RefundApi($this->client);
        $refunds = $refundApi->getRefunds();

        $this->assertFalse(empty($refunds));
        $this->assertSame("refund_id", $refunds[0]->getRefundId());
    }
}
